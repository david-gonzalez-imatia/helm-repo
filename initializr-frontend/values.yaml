# Default values for initializr-frontend.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  tag: 1.19-alpine
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80
      
probePath: /  
livenessProbe:
  initialDelaySeconds: 300
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 1
readinessProbe:
  initialDelaySeconds: 300
  failureThreshold: 3
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 1

ingress:
  enabled: true
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: imatia.34.90.3.84.nip.io
      paths: [/]

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

codeRepositories:
  # Angular frontend
  frontendRepo:
    name: "APPWEB-PlatformInitializr"
    owner: "imatia-innovation"
    user: "david-gonzalez-imatia"
    ref: "develop"
    secretName: "repo-secret"

backend:

  ## If you are deploying initializr as part of a release and the backend is part
  ## of the release, you can pass a suffix that will be used to find the backend
  ## in releasename-backendSuffix. Please note that this setting precedes backend.host
  ##
  # chartName: initializr-backend

  ## Database Hostname. Ignored when backend.chartName is set.
  ##
  # host: foo

  ## If you want to test initializr, you can set it to bundle a backend

  bundleBackend: true

initializr-backend:

  replicaCount: 1

  image:
    repository: maven
    tag: 3-jdk-8
    pullPolicy: IfNotPresent

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    create: false
    name: ""

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
  
  provider:
    gke: true
    aws: false
    secret: "secretjson"
    credentials: "jx-tests-im-7f5e6b6ae5b7.json"
  
  mavenRepository: https://artifactory.imatia.com/public-artifactory/libs-release 

  service:
    type: ClusterIP
    port: 8080
    
  probePath: /health 
  livenessProbe:
    initialDelaySeconds: 480
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1
  readinessProbe:
    initialDelaySeconds: 480
    failureThreshold: 3
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1

  ingress:
    enabled: true
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: initializr-backend.34.90.3.84.nip.io
        paths: [/]

    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

  ## Persist project templates to a persistent volume
  persistence:
    enabled: true
    ## database data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClass: "-"
    accessMode: ReadWriteOnce
    size: 10Mi

  # Kubernetes providers

  clusters:
    eksEnabled: false
    gkeEnabled: true
  
  # Repositories

  codeRepositories:
    # Yeoman based application to generate the project from the templates
    generatorRepo:
      name: "APPCLR-PlatformInitializr"
      owner: "imatia-innovation"
      user: "david-gonzalez-imatia"
      ref: "develop"
      secretName: "repo-secret"
    # Springboot backend with REST api
    backendRepo:
      name: "APPWSC-PlatformInitializr"
      owner: "imatia-innovation"
      user: "david-gonzalez-imatia"
      ref: "jx-activities"
      secretName: "repo-secret"
    # Templates for the generator
    templatesRepo:
      name: "APPCLR-PlatformInitializr-templates"
      owner: "imatia-innovation"
      user: "david-gonzalez-imatia"
      ref: "develop"
      secretName: "repo-secret"
      
  repoBot:
    name: "imcloudbot"
    organization: "implatformdev"
    secretName: "repo-secret2"
    email: "implatform.technology@imatia.com"
  
  postgresql:
    postgresqlPostgresPassword: test
    postgresqlUsername: testuser
    postgresqlPassword: testuser
    postgresqlDatabase: imatiaapps
