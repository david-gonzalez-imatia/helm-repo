apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend-config
data:
  install_node.sh: |
    #!/bin/sh

    NODE_VERSION=12.20.0

    apk add --no-cache \
        libstdc++ \
    && apk add --no-cache --virtual .build-deps \
        curl \
    && ARCH= && alpineArch="$(apk --print-arch)" \
      && case "${alpineArch##*-}" in \
        x86_64) \
          ARCH='x64' \
          CHECKSUM="9a25589439ebec4e74fc2652893b5887b33130c0dd7dad2daa1d200024fa676c" \
          ;; \
        *) ;; \
      esac \
    && if [ -n "${CHECKSUM}" ]; then \
      set -eu; \
      curl -fsSLO --compressed "https://unofficial-builds.nodejs.org/download/release/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz"; \
      echo "$CHECKSUM  node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz" | sha256sum -c - \
        && tar -xJf "node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz" -C /usr/local --strip-components=1 --no-same-owner \
        && ln -s /usr/local/bin/node /usr/local/bin/nodejs; \
    else \
      echo "Building from source" \
      && apk add --no-cache --virtual .build-deps-full \
          binutils-gold \
          g++ \
          gcc \
          gnupg \
          libgcc \
          linux-headers \
          make \
          python2 \
      && for key in \
        4ED778F539E3634C779C87C6D7062848A1AB005C \
        94AE36675C464D64BAFA68DD7434390BDBE9B9C5 \
        1C050899334244A8AF75E53792EF661D867B9DFA \
        71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 \
        8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 \
        C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 \
        C82FA3AE1CBEDC6BE46B9360C43CEC45C17AB93C \
        DD8F2338BAE7501E3DD5AC78C273792F7D83545D \
        A48C2BEE680E841632CD4E44F07496B3EB3C1762 \
        108F52B48DB57BB0CC439B2997B01419BD92F80A \
        B9E2F5981AA6E0CD28160D9FF13993A75599653C \
      ; do \
        gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys "$key" || \
        gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys "$key" || \
        gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys "$key" ; \
      done \
      && curl -fsSLO --compressed "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION.tar.xz" \
      && curl -fsSLO --compressed "https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc" \
      && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \
      && grep " node-v$NODE_VERSION.tar.xz\$" SHASUMS256.txt | sha256sum -c - \
      && tar -xf "node-v$NODE_VERSION.tar.xz" \
      && cd "node-v$NODE_VERSION" \
      && ./configure \
      && make -j$(getconf _NPROCESSORS_ONLN) V= \
      && make install \
      && apk del .build-deps-full \
      && cd .. \
      && rm -Rf "node-v$NODE_VERSION" \
      && rm "node-v$NODE_VERSION.tar.xz" SHASUMS256.txt.asc SHASUMS256.txt; \
    fi \
    && rm -f "node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz" \
    && apk del .build-deps \
    && node --version \
    && npm --version

    ## Copy sources and install dependencies
    cd
    curl -L -H "Accept: application/vnd.github.v3+json" -u $FRONTENDREPO_USERNAME:$FRONTENDREPO_PASSWORD https://api.github.com/repos/{{ .Values.codeRepositories.frontendRepo.owner }}/{{ .Values.codeRepositories.frontendRepo.name }}/tarball/{{ .Values.codeRepositories.frontendRepo.ref }} --output {{ .Values.codeRepositories.frontendRepo.name }}.tar.gz
    tar xpf {{ .Values.codeRepositories.frontendRepo.name }}.tar.gz
    mv {{ .Values.codeRepositories.frontendRepo.owner }}-{{ .Values.codeRepositories.frontendRepo.name }}* {{ .Values.codeRepositories.frontendRepo.name }}
    cd {{ .Values.codeRepositories.frontendRepo.name }}
    sed -i "/apiEndpoint/c\apiEndpoint:'http://{{ (index (index .Values "initializr-backend").ingress.hosts 0).host }}'" src/environments/environment.ts
    sed -i "/apiEndpoint/c\apiEndpoint:'http://{{ (index (index .Values "initializr-backend").ingress.hosts 0).host }}'" src/environments/environment.prod.ts
    sed -i "/target/c\ \"target\": \"http://{{ (index (index .Values "initializr-backend").ingress.hosts 0).host }}\"," proxy.config.json
    npm i
    
    cp /config/default.cnf /etc/nginx/conf.d/default.conf
    
    /docker-entrypoint.sh

    ## Remove default nginx website
    rm -rf /usr/share/nginx/html/*

    ## Build the angular app in production mode and store the artifacts in dist folder
    ## Enable --prod option in future versions
    $(npm bin)/ng build --output-path=/usr/share/nginx/html/

    nginx -g "daemon off;"
  default.cnf: |
    server {
        listen       80;
        listen  [::]:80;

        #
        # Wide-open CORS config for nginx
        #
        location / {
          if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            #
            # Custom headers and headers various browsers *should* be OK with but aren't
            #
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            #
            # Tell client that this pre-flight info is valid for 20 days
            #
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
          }
          if ($request_method = 'POST') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
          }
          if ($request_method = 'GET') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
          }
          root   /usr/share/nginx/html;
          index  index.html index.htm;
        #  proxy_set_header 'Access-Control-Allow-Origin' '*';
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }

        #location /generate {
        #  proxy_pass http://{{ .Release.Name }}-initializr-backend:8080;
        #  proxy_set_header 'Access-Control-Allow-Origin' '*';
        #  proxy_set_header Host $host;
        #  proxy_set_header X-Real-IP  $remote_addr;
        #}

        #location /download/ {
        #  proxy_pass http://{{ .Release.Name }}-initializr-backend:8080;
        #  proxy_set_header 'Access-Control-Allow-Origin' '*';
        #  proxy_set_header Host $host;
        #  proxy_set_header X-Real-IP  $remote_addr;
        #}
    }
